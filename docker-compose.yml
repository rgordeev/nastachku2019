version: '2.4'
services:

  servicea:
    depends_on:
      dba:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    build:
      context: ./servicea
      dockerfile: Dockerfile
    image: rgordeev/servicea
    volumes:
    - servicea-logs:/usr/share/app/logs
    environment:
    - JAEGER_SERVICE_NAME=servicea
    - JAEGER_AGENT_HOST=tracing
    - JAEGER_AGENT_PORT=6831
    - JAEGER_SAMPLER_MANAGER_HOST_PORT=tracing:5778
    - SPRING_RABBITMQ_HOST=rabbitmq
    - SPRING_DATASOURCE_JDBC_URL=jdbc:postgresql://dba:5432/servicea
    - SPRING_DATASOURCE_USERNAME=servicea
    - SPRING_DATASOURCE_PASSWORD=123456
    - SPRING_PROFILES_ACTIVE=prod
    - JAVA_OPTS=-Xmx300m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9000 -Dcom.sun.management.jmxremote.rmi.port=9000 -Djava.rmi.server.hostname=localhost
    ports:
    - 8080:8080
    - 5005:5005
    - 9000:9000
    networks:
    - backend

  serviceb:
    depends_on:
      dbb:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    build:
      context: ./serviceb
      dockerfile: Dockerfile
    image: rgordeev/serviceb
    volumes:
    - serviceb-logs:/usr/share/app/logs
    environment:
    - SPRING_RABBITMQ_HOST=rabbitmq
    - SPRING_DATASOURCE_JDBC_URL=jdbc:postgresql://dbb:5432/serviceb
    - SPRING_DATASOURCE_USERNAME=serviceb
    - SPRING_DATASOURCE_PASSWORD=123456
    - SPRING_PROFILES_ACTIVE=prod
    - JAVA_OPTS=-Xmx300m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9001 -Dcom.sun.management.jmxremote.rmi.port=9001 -Djava.rmi.server.hostname=localhost
    ports:
    - 8081:8080
    - 5015:5005
    - 9001:9001
    expose:
    - 8080
    - 5015
    networks:
    - backend

  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    image: rgordeev/rabbitmq
    logging:
      options:
        max-size: 50m
    ports:
    - 15671:15671
    - 15672:15672
    - 5672:5672
    - 15674:15674
    expose:
    - 15671
    - 15672
    - 5672
    - 15674
    - 61613
    networks:
    - backend

  dba:
    image: postgres:10.5
    environment:
    - POSTGRES_USER=servicea
    - POSTGRES_PASSWORD=123456
    volumes:
    - dba-data:/var/lib/postgresql/data/
    ports:
    - 5432:5432
    networks:
    - backend
    # max_connections = 500
    command: postgres -N 500
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U servicea"]
      interval: 20s
      timeout: 20s
      retries: 5

  dbb:
    image: postgres:10.5
    environment:
      - POSTGRES_USER=serviceb
      - POSTGRES_PASSWORD=123456
    volumes:
      - dbb-data:/var/lib/postgresql/data/
    ports:
      - 5433:5432
    networks:
      - backend
    # max_connections = 500
    command: postgres -N 500
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U serviceb"]
      interval: 20s
      timeout: 20s
      retries: 5


  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    image: rgordeev/monitoring
    environment:
    - JAVA_OPTS=-Xmx300m
    - SPRING_PROFILES_ACTIVE=prod
    ports:
    - 8082:8080
    volumes:
    - monitoring-logs:/usr/share/app/logs
    networks:
    - backend

  tracing:
    image: jaegertracing/all-in-one:1.11
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    networks:
      - backend

networks:
  backend:
    driver: bridge
volumes:
  servicea-logs:
  serviceb-logs:
  monitoring-logs:
  dbb-data:
  dba-data:

